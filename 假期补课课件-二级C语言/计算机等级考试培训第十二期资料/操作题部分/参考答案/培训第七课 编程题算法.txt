课堂练习
第一套 第3题 （向左平移m个字符算法）
void fun(char *w, int m) 
{	int i,j,len;
	char t;
	len=strlen(w);
   	for(i=0;i<m;i++)
	{	t=m[len-1];
		for(j=len-1;j>0;j--)
			w[j]=w[j-1];
		w[0]=t;
	}
} 
第二套 第3题（比较两个字符串的长度）
char *fun(char *s, char *t) 
{		
	int i,j;
	for(i=0;s[i];i++);//求第一个字符串的长度
	for(j=0;s[j];j++);//求第二个字符串的长度
	if(i<=j)  return s;//返回长度较短的字符串地址
	else  return t;
} 


补充：6个整型元素冒泡法排序
int a[6],i,j,t;

for(i=0;i<5;i++)
	for(j=0;j<5-i;j++)
		if( a[j] > a[j+1] )
		{	t=a[j]; a[j]=a[j+1]; a[j+1]=t;  }


第三套 第3题（除去首、尾字符降序排序（冒泡法））
int fun(char *s,int num) 
{		
  	int i,j; char t;
	for(i=1;i<num-2;i++)
		for(j=1;j<num-2-i;j++)
			if(s[j] < s[j+1])
				t=s[j], s[j]=s[j+1], s[j+1]=t;
} 
第三套 第3题（除去首、尾字符降序排序（选择法））
int fun(char *s,int num) 
{	int i,j,k; char t;
	for(i=1;i<num-2;i++)
	{	k=i;
		for(j=i+1;j<num-2;j++)
			if(s[k] < s[j] )  k=j;
		t=s[i], s[i]=s[k], s[k]=t;
	}
} 

第四套 第3题（顺序连接多个字符串）
void fun(char a[M][N],char *b) 
{	int i,j,k=0;
	for(i=0;i<M;i++)
		for(j=0;a[i][j]!='\0';j++)
			b[k++]=a[i][j];
	b[k]='\0';
} 




















